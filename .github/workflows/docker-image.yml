# on:
#   push:
#     branches: ["main"]
# jobs:
#   print_npm_i :
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - id: print_npm_i
#         working-directory: ./api
#         shell: bash
#         run: |
#           OUTPUT=`npm i`
#           echo outputContent=$OUTPUT >> $GITHUB_OUTPUT
#       - id: print_npm_i_2
#         run: echo "${{steps.print_npm_i.outputs.outputContent}}"
         

      #      - name: build inf
      # working-directory: ./aws
      # run: |
      #    terraform init
      #    terraform destroy -auto-approve


on:
  push:
    branches: ["main"]
jobs:
  build_docker_image_ecr :
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag geri007/api:1.0.0
    - name: login to aws 
      run: |
         aws configure set aws_access_key_id ${{secrets.AWS_ACCESS_KEY}}
         aws configure set aws_secret_access_key ${{secrets.AWS_SECRET_ACCESS_KEY}}
         aws configure set region eu-central-1
         aws configure set output "json"
    - name: init terraform
      working-directory: ./aws
      run: terraform init
    - id: build_erc_repo_save_output
      working-directory: ./aws
      shell: bash
      run: |
       terraform state pull -var="image=ami"
       terraform refresh -var="image=ami"
       terraform apply -target module.ecr -var="image=ami" -auto-approve
       echo outputContent=`terraform output ecrRepo` >> $GITHUB_OUTPUT
    - name: push the image to ecr
      shell: bash
      run: |
       aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 863872515231.dkr.ecr.eu-central-1.amazonaws.com
       docker tag geri007/api:1.0.0 "${{steps.build_erc_repo_save_output.outputs.outputContent}}:1.0.0"
       docker push "${{steps.build_erc_repo_save_output.outputs.outputContent}}:1.0.0"
    - name: build the inf
      working-directory: ./aws
      shell: bash
      run: |
       terraform apply -target module.rds  -target  module.ec2  -var="image=${{steps.build_erc_repo_save_output.outputs.outputContent}}:1.0.0" -auto-approve


         
         